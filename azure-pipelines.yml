# Talend CI/CD on Azure DevOps
# Build Pipeline for building and publishing on Talend Cloud Management Console

trigger: none
pool:
 vmImage: 'ubuntu-latest'

variables:
- group: Talend Variables
- name: project_name
  value: 'AZUREPIPELINE'
#Variable corresponding to the specific artifact you want to build. Define it as a variable in the GUI so it can be overwritten at runtime. If you don't use it, all existing artifacts in your project will be executed and published. 
- name: jobs_to_build
  value: 'jobs/process/joindatadb_0.1'

- name: talend_ci_config
  value: >-
    -DforceUpdate=true
    -Dlicense.path=$(license.secureFilePath)
    -Dtalend.studio.p2.base=$(p2_base_url)
    -Dtalend.studio.p2.update=$(p2_update_url)




steps:
  - task: DownloadSecureFile@1
    name: settings_xml
    inputs:
      secureFile: maven_settings.xml

  - task: DownloadSecureFile@1
    name: license
    inputs:
      secureFile: license

  - task: DownloadSecureFile@1
    name: pom_xml
    inputs:
      secureFile: sample_pom.xml

  - task: Maven@3
    displayName: 'Maven install P2 and generate POMs'
    inputs:
      mavenPomFile: '$(pom_xml.secureFilePath)'
      goals: 'org.talend.ci:builder-maven-plugin:8.0.1:generateAllPoms' 
      options: '--batch-mode --settings $(settings_xml.secureFilePath) $(talend_ci_config)'
      publishJUnitResults: false

  - task: CmdLine@2
    displayName: 'List modules / available artifacts to build'
    inputs:
      script: |
        pwd
        cat $(project_name)/poms/pom.xml | sed '/<modules>/,/<\/modules>/!d'

  - task: Maven@3
    displayName: 'Maven build & publish Talend artifacts to Talend Cloud'
    inputs:
        mavenPomFile: '$(project_name)/poms/pom.xml'
        goals: 'deploy' #compile / deploy
        options: '--batch-mode --settings $(settings_xml.secureFilePath) -pl $(jobs_to_build) -am -fae $(talend_ci_config)'
